@model IEnumerable<BoxOffice.Models.Movie>
@using BoxOffice.Models;
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "BoxOffice Administrative Interface - Movies";
}
@section js {
    <script type="text/javascript">
    var page = "#movies";
    var subpage = "#allMoviesLink";
    $(document).ready(function () {
        $(page).addClass("selected");
        $(subpage).addClass("selected");
    });
    </script>
}
@section subMenu {
    @Html.Partial(partialViewName: "_AdminMoviesSubMenuPartial")
}
@{
    var sortedMovies = new Dictionary<string, List<Movie>>();
    var alphabet = new List<string>
    {
        "a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"
    };

    // select movies whose title begins with a number
    var movies = (from m in
                      ((from g in Model
                        where ((g.Name != null) && ((g.Name.StartsWith("1")) || (g.Name.StartsWith("2")) || (g.Name.StartsWith("3")) || (g.Name.StartsWith("4")) || (g.Name.StartsWith("5")) || (g.Name.StartsWith("6")) || (g.Name.StartsWith("7")) || (g.Name.StartsWith("8")) || (g.Name.StartsWith("9")) || (g.Name.StartsWith("0"))))
                        select g).ToList())
                  orderby m.Name
                  select m).ToList();
    sortedMovies.Add("#", movies);

    // now add all other movies, split by their beginning letter
    foreach (var letter in alphabet)
    {
        sortedMovies.Add(letter, (from g in
                                      (from m in Model
                                       orderby m.Name
                                       select m)
                                  where g.Name.ToLower().StartsWith(letter)
                                  select g).ToList());
    }
}
@foreach (var letter in sortedMovies.Keys)
{
    if (sortedMovies[letter].Count != 0)
    {
    <section class="section" id="@letter">
        <h3>@letter</h3>
        <div class="container">
            @foreach (var movie in sortedMovies[letter])
            {
                <section class="tile">
                    <div class="tileContent containerTile">
                        <div class="item">
                            @Html.Partial(partialViewName: "_TilePicPartial", model: movie)
                        </div>
                        <div class="tileText item">
                            <a class="tileDescription" href="@Url.Action("Details", "Movies", new { id = movie.MovieID })">@movie.Name
                            </a>
                        </div>
                        <div class="item buttons">
                            @{
                var promoteID = string.Format("promoteButton{0}", movie.MovieID);
                var deleteID = string.Format("deleteButton{0}", movie.MovieID);
                            }
                            <button type="button" id="@promoteID" class="item ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only ui-button-text">
                                <a class="link" href="javascript:promoteMovie(@movie.MovieID);">Promote</a>
                            </button>
                            <button type="button" id="@deleteID" class="item ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only ui-button-text">
                                <a class="link" href="javascript:deleteMovie(@movie.MovieID);">Delete</a>
                            </button>
                        </div>
                    </div>
                    <!-- tileContent -->
                </section>
            }
        </div>
    </section>
    }
}